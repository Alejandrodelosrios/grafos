/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Pesados;

import Excepciones.AristaNoExisteException;
import Excepciones.AristaYaExisteException;
import Utileria.BFSPesado;
import Utileria.Warshall;
import Utileria.CicloPesado;
import Utileria.ConexoPesado;
import Utileria.DFSPesado;
import Utileria.Dijkstra;
import Utileria.Floyd;
import Utileria.IslaPesado;
import Utileria.Kruskal;
import Utileria.OrdenamientoTopologico;
import Utileria.Prim;
import javax.swing.JOptionPane;

/**
 *
 * @author EQUIPO
 */
public class FormularioGrafoPesado extends javax.swing.JFrame {
     GrafoPesado grafo;
    /**
     * Creates new form FormularioGrafo
     */
    public FormularioGrafoPesado() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCargarVertices = new javax.swing.JButton();
        jInsertar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        jCantidadVertice = new javax.swing.JButton();
        jCantidadArista = new javax.swing.JButton();
        jInsertarAristas = new javax.swing.JButton();
        jeliminarAristas = new javax.swing.JButton();
        jEliminarVertice = new javax.swing.JButton();
        jGradoVertice = new javax.swing.JButton();
        jGradoDeEntrada = new javax.swing.JButton();
        jGradoDeSalida = new javax.swing.JButton();
        jHayCiClos = new javax.swing.JButton();
        jConexo = new javax.swing.JButton();
        jFloyd = new javax.swing.JButton();
        jDijkstra = new javax.swing.JButton();
        jKruskal = new javax.swing.JButton();
        jPrim = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jBFS = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenuItem16 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jCargarVertices.setText("cargar ");
        jCargarVertices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCargarVerticesActionPerformed(evt);
            }
        });

        jInsertar.setText("insertar");
        jInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jInsertarActionPerformed(evt);
            }
        });

        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        jScrollPane1.setViewportView(jTextArea);

        jCantidadVertice.setText("cantVertice");
        jCantidadVertice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCantidadVerticeActionPerformed(evt);
            }
        });

        jCantidadArista.setText("cantAristas");
        jCantidadArista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCantidadAristaActionPerformed(evt);
            }
        });

        jInsertarAristas.setText("insertarAristas");
        jInsertarAristas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jInsertarAristasActionPerformed(evt);
            }
        });

        jeliminarAristas.setText("eliminarAristas");
        jeliminarAristas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jeliminarAristasActionPerformed(evt);
            }
        });

        jEliminarVertice.setText("eliminarVertice");
        jEliminarVertice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEliminarVerticeActionPerformed(evt);
            }
        });

        jGradoVertice.setText("grado de vertice");
        jGradoVertice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jGradoVerticeActionPerformed(evt);
            }
        });

        jGradoDeEntrada.setText("grado de entrada");
        jGradoDeEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jGradoDeEntradaActionPerformed(evt);
            }
        });

        jGradoDeSalida.setText("grado de salida");
        jGradoDeSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jGradoDeSalidaActionPerformed(evt);
            }
        });

        jHayCiClos.setText("hayCiclos");
        jHayCiClos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jHayCiClosActionPerformed(evt);
            }
        });

        jConexo.setText("conexo");
        jConexo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jConexoActionPerformed(evt);
            }
        });

        jFloyd.setText("Floyd");
        jFloyd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFloydActionPerformed(evt);
            }
        });

        jDijkstra.setText("Dijkstra");
        jDijkstra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDijkstraActionPerformed(evt);
            }
        });

        jKruskal.setText("Kruskal");
        jKruskal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jKruskalActionPerformed(evt);
            }
        });

        jPrim.setText("Prim");
        jPrim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPrimActionPerformed(evt);
            }
        });

        jMenu1.setText("grafo No Pesado");

        jBFS.setText("BFS");
        jBFS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBFSActionPerformed(evt);
            }
        });
        jMenu1.add(jBFS);

        jMenuItem2.setText("DFS");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("alg. warshall");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("ord. topologico");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenu3.setText("islas");

        jMenuItem5.setText("hay islas");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuItem6.setText("contador de islas");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenu1.add(jMenu3);

        jMenuItem7.setText("ciclos");
        jMenu1.add(jMenuItem7);

        jMenuItem8.setText("conexo");
        jMenu1.add(jMenuItem8);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("grafo Pesado");

        jMenuItem9.setText("BFS");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem9);

        jMenuItem10.setText("DFS");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem10);

        jMenuItem11.setText("alg. warshall");
        jMenu2.add(jMenuItem11);

        jMenuItem12.setText("ord. topologico");
        jMenu2.add(jMenuItem12);

        jMenu4.setText("islas");

        jMenuItem13.setText("hay islas");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem13);

        jMenuItem14.setText("contador de islas");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem14);

        jMenu2.add(jMenu4);

        jMenuItem15.setText("ciclos");
        jMenu2.add(jMenuItem15);

        jMenuItem16.setText("conexo");
        jMenu2.add(jMenuItem16);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jInsertar)
                .addGap(18, 18, 18)
                .addComponent(jCargarVertices)
                .addGap(18, 18, 18))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jCantidadArista)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jPrim)
                                        .addComponent(jHayCiClos)))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jConexo)
                                        .addGap(18, 18, 18)
                                        .addComponent(jFloyd)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jDijkstra)
                                        .addGap(18, 18, 18)
                                        .addComponent(jKruskal)
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jGradoVertice)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jGradoDeEntrada)
                                        .addGap(18, 18, 18)
                                        .addComponent(jGradoDeSalida)
                                        .addContainerGap(20, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jInsertarAristas)
                                .addGap(18, 18, 18)
                                .addComponent(jeliminarAristas)
                                .addGap(33, 33, 33)
                                .addComponent(jEliminarVertice)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCantidadVertice))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCargarVertices)
                    .addComponent(jInsertar))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jInsertarAristas)
                    .addComponent(jeliminarAristas)
                    .addComponent(jEliminarVertice)
                    .addComponent(jCantidadVertice))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCantidadArista)
                    .addComponent(jGradoVertice)
                    .addComponent(jGradoDeEntrada)
                    .addComponent(jGradoDeSalida))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jHayCiClos)
                    .addComponent(jConexo)
                    .addComponent(jFloyd)
                    .addComponent(jDijkstra)
                    .addComponent(jKruskal))
                .addGap(18, 18, 18)
                .addComponent(jPrim)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCargarVerticesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCargarVerticesActionPerformed

// int nroDeVertice=Integer.parseInt(JOptionPane.showInputDialog("ingree la cantidad de vertices")); 
     grafo = new GrafoPesado(10);
     try{
     grafo.insertarArista(0,1,5.0);
     grafo.insertarArista(0,3,8.0);
     grafo.insertarArista(0,2,10.0);
     grafo.insertarArista(1,5,5.0);
     grafo.insertarArista(1,3,6.0);
     grafo.insertarArista(2,3,7.0);
     grafo.insertarArista(2,4,8.0);
     grafo.insertarArista(2,7,15.0);
     grafo.insertarArista(3,4,5.0);
     grafo.insertarArista(3,5,11.0);
     grafo.insertarArista(4,7,3.0);
     grafo.insertarArista(4,6,4.0);
     grafo.insertarArista(5,8,7.0);
     grafo.insertarArista(5,6,9.0);
     grafo.insertarArista(6,8,4.0);
     grafo.insertarArista(6,9,6.0);
     grafo.insertarArista(6,7,12.0);
     grafo.insertarArista(7,9,12.0);
     grafo.insertarArista(8,9,7.0);
     }catch(AristaYaExisteException ex){
     }
        // TODO add your handling code here:
    }//GEN-LAST:event_jCargarVerticesActionPerformed

    private void jInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jInsertarActionPerformed
     grafo.insertarVertice();
        // TODO add your handling code here:
    }//GEN-LAST:event_jInsertarActionPerformed

    private void jEliminarVerticeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEliminarVerticeActionPerformed
     int posVertice=Integer.parseInt(JOptionPane.showInputDialog("ingrese el vertice que quiere eliminar"));
     grafo.eliminarVertice(posVertice);
        // TODO add your handling code here:
    }//GEN-LAST:event_jEliminarVerticeActionPerformed

    private void jeliminarAristasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jeliminarAristasActionPerformed
     int x=Integer.parseInt(JOptionPane.showInputDialog("ingrese el vertice Origen"));
     int y=Integer.parseInt(JOptionPane.showInputDialog("ingrese el vertice Destino"));
         try {
             grafo.eliminarArista(x,y);
             // TODO add your handling code here:
         } catch (AristaNoExisteException ex) {
            JOptionPane.showMessageDialog(null,"no existe arista entre estos vertices");
         }
    }//GEN-LAST:event_jeliminarAristasActionPerformed

    private void jInsertarAristasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jInsertarAristasActionPerformed
    int x=Integer.parseInt(JOptionPane.showInputDialog("ingrese el vertice Origen"));
    int y=Integer.parseInt(JOptionPane.showInputDialog("ingrese el vertice Destino"));
    double costo=Double.parseDouble(JOptionPane.showInputDialog("ingrese el costo de la arista"));
         try {
             grafo.insertarArista(x,y,costo);            
             // TODO add your handling code here:
         } catch (AristaYaExisteException ex) {
           JOptionPane.showMessageDialog(null,"existe una arista entre estos vertices");
         }
    }//GEN-LAST:event_jInsertarAristasActionPerformed

    private void jCantidadAristaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCantidadAristaActionPerformed
    JOptionPane.showMessageDialog(null,"la cantidad de aristas es: "+grafo.cantidadDeAristas());
        // TODO add your handling code here:
    }//GEN-LAST:event_jCantidadAristaActionPerformed

    private void jCantidadVerticeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCantidadVerticeActionPerformed
        JOptionPane.showMessageDialog(null,"la cantidad de vertices es: "+grafo.cantidadVertices());       
        // TODO add your handling code here:
    }//GEN-LAST:event_jCantidadVerticeActionPerformed

    private void jGradoVerticeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jGradoVerticeActionPerformed
   int x=Integer.parseInt(JOptionPane.showInputDialog("ingrese un vertice para ver su grado"));
   JOptionPane.showMessageDialog(null,"el grado del vertice es de: "+grafo.gradoDeVertice(x));
        // TODO add your handling code here:
    }//GEN-LAST:event_jGradoVerticeActionPerformed

    private void jGradoDeEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jGradoDeEntradaActionPerformed
       int x=Integer.parseInt(JOptionPane.showInputDialog("ingrese un vertice para ver su grado"));
   JOptionPane.showMessageDialog(null,"el grado del vertice es de: "+grafo.gradoDeEntrada(x));
        // TODO add your handling code here:
    }//GEN-LAST:event_jGradoDeEntradaActionPerformed

    private void jGradoDeSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jGradoDeSalidaActionPerformed
      int x=Integer.parseInt(JOptionPane.showInputDialog("ingrese un vertice para ver su grado"));
      JOptionPane.showMessageDialog(null,"el grado del vertice es de: "+grafo.gradoDeSalida(x));

        // TODO add your handling code here:
    }//GEN-LAST:event_jGradoDeSalidaActionPerformed

    private void jHayCiClosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jHayCiClosActionPerformed
     CicloPesado tieneCiclos = new CicloPesado(this.grafo);
       if(tieneCiclos.hayCiclosEnGrafo()){
         JOptionPane.showMessageDialog(null,"el grafo tiene ciclo");
       }else{
        JOptionPane.showMessageDialog(null,"el grafo no tiene ciclo");   
       }
       
    }//GEN-LAST:event_jHayCiClosActionPerformed

    private void jConexoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jConexoActionPerformed
    ConexoPesado esConexo = new ConexoPesado(this.grafo);
    if(esConexo.esConexo()){
      JOptionPane.showMessageDialog(null,"es conexo");
    }else{
      JOptionPane.showMessageDialog(null,"no es conexo");
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_jConexoActionPerformed

    private void jBFSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBFSActionPerformed
         int posVertice=Integer.parseInt(JOptionPane.showInputDialog("ingrese el vertice que quiere comenzar"));
     BFSPesado recorrido=new BFSPesado(this.grafo,posVertice);
     jTextArea.append(recorrido.getRecorrido().toString());

        // TODO add your handling code here:
    }//GEN-LAST:event_jBFSActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
         int posVertice=Integer.parseInt(JOptionPane.showInputDialog("ingrese el vertice que quiere comenzar"));
     BFSPesado recorrido=new BFSPesado(this.grafo,posVertice);
     jTextArea.append(recorrido.getRecorrido().toString());

        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
    int posVertice=Integer.parseInt(JOptionPane.showInputDialog("ingrese el vertice que quiere comenzar"));
     DFSPesado recorrido=new DFSPesado(this.grafo,posVertice);
     jTextArea.append(recorrido.getRecorrido().toString());

        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
     int posVertice=Integer.parseInt(JOptionPane.showInputDialog("ingrese el vertice que quiere comenzar"));
     DFSPesado recorrido=new DFSPesado(this.grafo,posVertice);
     jTextArea.append(recorrido.getRecorrido().toString());

        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
     Warshall prueba=new Warshall(grafo);
     boolean[][] matrizDeCamino=prueba.getMatrizDeCaminos();
     jTextArea.append(prueba.imprimir(matrizDeCamino));
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
     OrdenamientoTopologico ordenamiento=new OrdenamientoTopologico(grafo);
     jTextArea.append(ordenamiento.getOrdenamientoTopologico().toString());
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
     IslaPesado recorrido=new IslaPesado(this.grafo);
     if(recorrido.hayIslas()){
      JOptionPane.showMessageDialog(null,"hay islas");
    }else{
      JOptionPane.showMessageDialog(null,"no hay islas");
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
    IslaPesado recorrido=new IslaPesado(this.grafo);
    JOptionPane.showMessageDialog(null,"el indice de la isla es: "+
                                              recorrido.getVerticeNoMarcado());
    int contador=recorrido.contadorDeIslas();
    JOptionPane.showMessageDialog(null,"la cantidad de islas: "+contador);
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
       IslaPesado recorrido=new IslaPesado(this.grafo);
     if(recorrido.hayIslas()){
      JOptionPane.showMessageDialog(null,"hay islas");
    }else{
      JOptionPane.showMessageDialog(null,"no hay islas");
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
    IslaPesado recorrido=new IslaPesado(this.grafo);
    JOptionPane.showMessageDialog(null,"el indice de la isla es: "+
                                              recorrido.getVerticeNoMarcado());
    int contador=recorrido.contadorDeIslas();
    JOptionPane.showMessageDialog(null,"la cantidad de islas: "+contador);
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jFloydActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFloydActionPerformed
     Floyd algFloyd= new Floyd(this.grafo);
      int x=Integer.parseInt(JOptionPane.showInputDialog("ingrese el vertice Origen"));
      //int y=Integer.parseInt(JOptionPane.showInputDialog("ingrese el vertice Destino"));
      jTextArea.append(algFloyd.imprimirCamino(x));
        // TODO add your handling code here:
    }//GEN-LAST:event_jFloydActionPerformed

    private void jDijkstraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDijkstraActionPerformed
    Dijkstra algDijkstra= new Dijkstra(this.grafo);
      int x=Integer.parseInt(JOptionPane.showInputDialog("ingrese el vertice Origen"));
      int y=Integer.parseInt(JOptionPane.showInputDialog("ingrese el vertice Destino"));
      algDijkstra.ejecutarDijkstra(x,y);
      jTextArea.append(algDijkstra.imprimirCamino(x,y)+" costo total:"+algDijkstra.mostrarCosto(y));
        // TODO add your handling code here:
    }//GEN-LAST:event_jDijkstraActionPerformed

    private void jKruskalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jKruskalActionPerformed
    Kruskal algKruskal=new Kruskal(this.grafo);
    jTextArea.append(algKruskal.imprimirArbolDeExpansion());
        // TODO add your handling code here:
    }//GEN-LAST:event_jKruskalActionPerformed

    private void jPrimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPrimActionPerformed
     Prim algPrim =new Prim(this.grafo);
    int x=Integer.parseInt(JOptionPane.showInputDialog("ingrese el vertice Origen"));
     algPrim.ejecutarPrim(x);
     jTextArea.append(algPrim.imprimirArbolDeExpansion());
        // TODO add your handling code here:
    }//GEN-LAST:event_jPrimActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioGrafoPesado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioGrafoPesado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioGrafoPesado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioGrafoPesado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormularioGrafoPesado().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem jBFS;
    private javax.swing.JButton jCantidadArista;
    private javax.swing.JButton jCantidadVertice;
    private javax.swing.JButton jCargarVertices;
    private javax.swing.JButton jConexo;
    private javax.swing.JButton jDijkstra;
    private javax.swing.JButton jEliminarVertice;
    private javax.swing.JButton jFloyd;
    private javax.swing.JButton jGradoDeEntrada;
    private javax.swing.JButton jGradoDeSalida;
    private javax.swing.JButton jGradoVertice;
    private javax.swing.JButton jHayCiClos;
    private javax.swing.JButton jInsertar;
    private javax.swing.JButton jInsertarAristas;
    private javax.swing.JButton jKruskal;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JButton jPrim;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea;
    private javax.swing.JButton jeliminarAristas;
    // End of variables declaration//GEN-END:variables
}
